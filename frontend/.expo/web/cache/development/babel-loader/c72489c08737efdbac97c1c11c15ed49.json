{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/junior/Documentos/www/front-end/react-native/instagram-clone/frontend/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser } from \"../redux/actions/index\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nvar Tab = createBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Add\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["/home/junior/Documentos/www/front-end/react-native/instagram-clone/frontend/components/Main.js"],"names":["React","Component","createBottomTabNavigator","MaterialCommunityIcons","connect","bindActionCreators","fetchUser","FeedScreen","ProfileScreen","Tab","EmptyScreen","Main","props","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import { View, Text, Settings } from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\n\n//import firebase from \"firebase\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser } from \"../redux/actions/index\";\n\nimport FeedScreen from \"./main/Feed\";\n\nimport ProfileScreen from \"./main/Profile\";\n\nconst Tab = createBottomTabNavigator();\n\nconst EmptyScreen = () => {\n  return null;\n};\n\nexport class Main extends Component {\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n  render() {\n    return (\n      <Tab.Navigator>\n        <Tab.Screen\n          name=\"Feed\"\n          component={FeedScreen}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Add\"\n          component={EmptyScreen}\n          listeners={({ navigation }) => ({\n            tabPress: (event) => {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            },\n          })}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"plus-box\" color={color} size={26} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Profile\"\n          component={ProfileScreen}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons\n                name=\"account-circle\"\n                color={color}\n                size={26}\n              />\n            ),\n          }}\n        />\n      </Tab.Navigator>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  currentUser: store.userState.currentUser,\n});\nconst mapDispatchProps = (dispatch) =>\n  bindActionCreators({ fetchUser }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\n"]},"metadata":{},"sourceType":"module"}